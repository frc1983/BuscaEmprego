@model BuscaEmprego.Database.Vaga

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Details</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <h3>@Html.ViewBag.Sucesso</h3>

    <fieldset>
        <legend>Vaga</legend>

        <div class="display-label">
            Email:
            @Html.DisplayFor(model => model.Usuario.Email)
        </div>

        <div class="display-label">
            Tipo:
            @Html.DisplayFor(model => model.Tipo.Tipo1)
        </div>

        <div class="display-label">
            Descrição:
            @Html.DisplayFor(model => model.Descricao)
        </div>

        <div class="display-label">
            Salário:
            @Html.DisplayFor(model => model.Salario)
        </div>

        <div class="display-label">
            Benefícios:
            @Html.DisplayFor(model => model.Beneficios)
        </div>

        <div class="display-label">
            Ativa:
            @Html.DisplayFor(model => model.Ativa)
        </div>

        <div class="display-label">
            Data Cadastro:
            @Html.DisplayFor(model => model.Data_Cadastro)
        </div>

        @if (Session["tipo_usuario"] != null && int.Parse(Session["tipo_usuario"].ToString()) == 1)
        {
            <div class="display-label">
                Data Preenchimento:
                @Html.DisplayFor(model => model.Data_Preenchimento_Vaga)
            </div>

            <div class="display-label">
                Data Cancelamento:
                @Html.DisplayFor(model => model.Data_Cancelamento)
            </div>

            <div class="display-label">
                Data Ativação:
                @Html.DisplayFor(model => model.Data_Ativacao)
            </div>

            <h4>Candidatos</h4>
            <div class="form-group">
                @{
                    var candidatos = BuscaEmprego.Helpers.CandidatoHelper.PopularCandidato(Model.Id);
                    for (int i = 0; i < candidatos.Count; i++)
                    {
                        string check = candidatos.ElementAt(i).Aprovado ? "checked" : "";
                        <div>
                            <input type="checkbox" name="check_candidato" value="@candidatos.ElementAt(i).Usuario_Id" @check /> 
                            @Html.DisplayFor(x => candidatos.ElementAt(i).Usuario.Nome)
                        </div>
                    }
                }
            </div>
            <p>
                <input type="submit" value="Approve" />
            </p>
            <p>
                @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = Model.Id })
            </p>
        }
        else
        {
            <p><input type="submit" value="Apply" /></p>   
        }
        <p>@Html.ActionLink("Voltar para a lista", "Find")</p>
    </fieldset>
}
